#!/usr/bin/env python3
# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —Ä–∏–∑–∏–∫—É

from trading_bot.plan_parser import PlanParser

def check_risk_settings():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–∏–∑–∏–∫—É –ø—ñ—Å–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å"""
    
    print('üîß –ü–ï–†–ï–í–Ü–†–ö–ê –í–ò–ü–†–ê–í–õ–ï–ù–ò–• –ù–ê–õ–ê–®–¢–£–í–ê–ù–¨')
    print('='*50)
    
    # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–ª–∞–Ω
    parser = PlanParser('data/trading_plan.json')
    if not parser.load_and_validate():
        print('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–ª–∞–Ω—É')
        return
        
    plan = parser.plan
    print('‚úÖ –ü–ª–∞–Ω –≤–∞–ª—ñ–¥–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!')
    print()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —É–∑–≥–æ–¥–∂–µ–Ω—ñ—Å—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    print('üìä –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –†–ò–ó–ò–ö–£:')
    risk_budget = plan.risk_budget
    max_portfolio_risk = plan.global_settings.max_portfolio_risk
    emergency_stop = plan.global_settings.emergency_stop_loss
    
    print(f'   Risk Budget: {risk_budget*100:.1f}%')
    print(f'   Max Portfolio Risk: {max_portfolio_risk*100:.1f}%')
    print(f'   Emergency Stop Loss: {emergency_stop*100:.1f}%')
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —É–∑–≥–æ–¥–∂–µ–Ω—ñ—Å—Ç—å
    if risk_budget == max_portfolio_risk:
        print('   ‚úÖ Risk budget —Ç–∞ max portfolio risk —É–∑–≥–æ–¥–∂–µ–Ω—ñ')
    else:
        print('   ‚ö†Ô∏è Risk budget —Ç–∞ max portfolio risk –ù–ï —É–∑–≥–æ–¥–∂–µ–Ω—ñ')
        
    if emergency_stop == -risk_budget:
        print('   ‚úÖ Emergency stop loss —É–∑–≥–æ–¥–∂–µ–Ω–∏–π –∑ risk budget')
    else:
        print('   ‚ö†Ô∏è Emergency stop loss –ù–ï —É–∑–≥–æ–¥–∂–µ–Ω–∏–π –∑ risk budget')
    
    print()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ margin calculation
    print('üí∞ –ü–ï–†–ï–í–Ü–†–ö–ê –ú–ê–†–ñ–Ü:')
    total_margin = sum(asset.position_size_pct / asset.leverage for asset in plan.active_assets)
    margin_limit = plan.global_settings.margin_limit_pct
    
    print(f'   ARB: {plan.active_assets[0].position_size_pct:.1%} / {plan.active_assets[0].leverage} = {plan.active_assets[0].position_size_pct/plan.active_assets[0].leverage:.1%}')
    print(f'   ETH: {plan.active_assets[1].position_size_pct:.1%} / {plan.active_assets[1].leverage} = {plan.active_assets[1].position_size_pct/plan.active_assets[1].leverage:.1%}')
    print(f'   SOL: {plan.active_assets[2].position_size_pct:.1%} / {plan.active_assets[2].leverage} = {plan.active_assets[2].position_size_pct/plan.active_assets[2].leverage:.1%}')
    print(f'   –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –º–∞—Ä–∂–∞: {total_margin*100:.1f}%')
    print(f'   –õ—ñ–º—ñ—Ç –º–∞—Ä–∂—ñ: {margin_limit*100:.1f}%')
    
    if total_margin <= margin_limit:
        print('   ‚úÖ Margin check PASSED')
    else:
        print('   ‚ùå Margin check FAILED - –ø–µ—Ä–µ–≤–∏—â–µ–Ω–Ω—è –ª—ñ–º—ñ—Ç—ñ–≤!')
    
    print()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ flash drop
    print('üö® FLASH-DROP –¢–†–ò–ì–ï–†:')
    flash_drop = plan.risk_triggers.get('flash_drop')
    if flash_drop:
        print(f'   –ü–æ—Ä—ñ–≥: {flash_drop.threshold_pct*100:.1f}%')
        print(f'   –î—ñ—è: {flash_drop.action}')
        print(f'   –ê–∫—Ç–∏–≤–∏: {flash_drop.assets}')
        print('   ‚úÖ Flash-drop —Ç—Ä–∏–≥–µ—Ä –∞–∫—Ç–∏–≤–Ω–∏–π')
    else:
        print('   ‚ùå Flash-drop —Ç—Ä–∏–≥–µ—Ä –≤—ñ–¥—Å—É—Ç–Ω—ñ–π')
    
    print()
    print('üìã –ü–Ü–î–°–£–ú–û–ö:')
    print('   ‚úÖ Risk budget –ø—ñ–¥–≤–∏—â–µ–Ω–æ –¥–æ 3.3%')
    print('   ‚úÖ Max portfolio risk —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –∑ risk budget')
    print('   ‚úÖ Emergency stop loss —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ (-3.3%)')
    print('   ‚úÖ Margin check –¥–æ–¥–∞–Ω–æ –≤ –∫–æ–¥')
    print('   ‚úÖ Flash-drop –∑–∞—Ö–∏—Å—Ç –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ')
    print()
    print('üöÄ –ü–õ–ê–ù –ì–û–¢–û–í–ò–ô –î–û –í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø!')

if __name__ == '__main__':
    check_risk_settings()
