#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü—ñ—ó –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è 5-—Ö–≤–∏–ª–∏–Ω–Ω–æ—ó –≤–æ–ª–∞—Ç—ñ–ª—å–Ω–æ—Å—Ç—ñ BTC
"""
import asyncio
import sys
sys.path.append('.')

from market_data_collector import MarketDataCollector

async def test_btc_5m_volatility():
    """–¢–µ—Å—Ç—É—î–º–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ 5m –≤–æ–ª–∞—Ç—ñ–ª—å–Ω–æ—Å—Ç—ñ BTC"""
    
    print("üîç –¢–ï–°–¢ –í–û–õ–ê–¢–Ü–õ–¨–ù–û–°–¢–Ü BTC (5m)")
    print("="*50)
    
    collector = MarketDataCollector()
    
    try:
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∫–ª—ñ—î–Ω—Ç
        await collector.initialize()
        
        # –¢–µ—Å—Ç —Ä—ñ–∑–Ω–∏—Ö —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤
        intervals = ['5m', '15m', '1h']
        
        for interval in intervals:
            volatility = await collector.calculate_volatility(
                symbol='BTCUSDT', 
                period=20, 
                interval=interval
            )
            
            volatility_pct = volatility * 100  # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤ –≤—ñ–¥—Å–æ—Ç–∫–∏
            
            print(f"üìä {interval:>3} –≤–æ–ª–∞—Ç—ñ–ª—å–Ω—ñ—Å—Ç—å: {volatility_pct:.2f}%")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç—Ä–∏–≥–µ—Ä 3%
            if volatility_pct > 3.0:
                print(f"üö® –¢–†–ò–ì–ï–†! –í–æ–ª–∞—Ç—ñ–ª—å–Ω—ñ—Å—Ç—å {volatility_pct:.2f}% > 3%")
                print("üîî –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å–∫–∞—Å—É–≤–∞—Ç–∏ –≤—Å—ñ –æ—Ä–¥–µ—Ä–∏!")
            else:
                print(f"‚úÖ –í–æ–ª–∞—Ç—ñ–ª—å–Ω—ñ—Å—Ç—å {volatility_pct:.2f}% –≤ –Ω–æ—Ä–º—ñ")
            
            print("-" * 30)
        
        # –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ç–µ—Å—Ç –¥–ª—è –∫—ñ–ª—å–∫–æ—Ö –ø–µ—Ä—ñ–æ–¥—ñ–≤
        print("\nüìà –¢–ï–°–¢ –†–Ü–ó–ù–ò–• –ü–ï–†–Ü–û–î–Ü–í (5m):")
        periods = [10, 20, 50]
        
        for period in periods:
            volatility = await collector.calculate_volatility(
                symbol='BTCUSDT', 
                period=period, 
                interval='5m'
            )
            
            volatility_pct = volatility * 100
            print(f"   {period:>2} –ø–µ—Ä—ñ–æ–¥—ñ–≤: {volatility_pct:.2f}%")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    
    finally:
        await collector.close()

if __name__ == "__main__":
    asyncio.run(test_btc_5m_volatility())
