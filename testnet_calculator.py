"""
üí∞ –¢–ï–°–¢–ù–ï–¢ PORTFOLIO CALCULATOR
–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ä–æ–∑–º—ñ—Ä—ñ–≤ –ø–æ–∑–∏—Ü—ñ–π –¥–ª—è —Ç–µ—Å—Ç–Ω–µ—Ç—É
"""

from main import TradingBot
from logging_setup import setup_logging, get_logger

setup_logging()
logger = get_logger(__name__)

def calculate_testnet_positions():
    """–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø–æ–∑–∏—Ü—ñ–π –¥–ª—è —Ç–µ—Å—Ç–Ω–µ—Ç—É"""
    
    bot = TradingBot()
    
    print("="*60)
    print("üí∞ –¢–ï–°–¢–ù–ï–¢ - –†–û–ó–†–ê–•–£–ù–û–ö –ü–û–ó–ò–¶–Ü–ô")
    print("="*60)
    
    print(f"–ó–∞–≥–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è: ${bot.portfolio_size}")
    print()
    print("–†–æ–∑–ø–æ–¥—ñ–ª –ø–æ –∞–∫—Ç–∏–≤–∞–º:")
    print("-" * 50)
    
    total_value = 0
    
    for asset, params in bot.trading_params.items():
        position_size = bot.portfolio_size * params.weight
        total_value += position_size
        
        print(f"{asset:8} | {params.weight*100:5.1f}% | ${position_size:7.2f} | {params.symbol}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏—Ö –ª—ñ–º—ñ—Ç—ñ–≤
        if position_size < 10:
            print(f"         ‚ö†Ô∏è  –£–í–ê–ì–ê: ${position_size:.2f} < $10 (–º—ñ–Ω. Binance)")
        elif position_size < 50:
            print(f"         ‚ö†Ô∏è  –ù–∏–∑—å–∫–æ: ${position_size:.2f} < $50 (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ)")
        else:
            print(f"         ‚úÖ  –û–ö: ${position_size:.2f} ‚â• $50")
    
    print("-" * 50)
    print(f"–í–°–¨–û–ì–û:     | 100.0% | ${total_value:7.2f}")
    print()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–æ—Å—Ç—ñ
    if abs(total_value - bot.portfolio_size) > 0.01:
        print("‚ö†Ô∏è  –£–í–ê–ì–ê: –°—É–º–∞ –ø–æ–∑–∏—Ü—ñ–π –Ω–µ —Ä—ñ–≤–Ω–∞ —Ä–æ–∑–º—ñ—Ä—É –ø–æ—Ä—Ç—Ñ–µ–ª—è!")
    else:
        print("‚úÖ –ü–æ—Ä—Ç—Ñ–µ–ª—å –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–∏–π")
    
    print()
    print("–ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –≤–∏–º–æ–≥–∏ Binance:")
    print("- Spot: ~$10-15 USDT")
    print("- Futures: ~$5-10 USDT")
    print("- –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: ‚â•$50")
    print()
    
    return bot.trading_params

if __name__ == "__main__":
    calculate_testnet_positions()
