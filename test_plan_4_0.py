#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ –ø–ª–∞–Ω—É 4.0_DEFINITIVE
"""
import json

def test_plan_4_0():
    print("üîç –¢–ï–°–¢ –ü–õ–ê–ù–£ 4.0_DEFINITIVE")
    print("="*50)
    
    with open('data/trading_plan.json', 'r', encoding='utf-8') as f:
        plan = json.load(f)
    
    print(f"‚úÖ –í–µ—Ä—Å—ñ—è: {plan['plan_version']}")
    print(f"üìÖ –î–∞—Ç–∞: {plan['plan_date']}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó
    setup_time = plan['trade_phases']['setup_orders']['time']
    print(f"‚è∞ –ß–∞—Å –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó: {setup_time}")
    
    if setup_time == "14:17":
        print("‚úÖ –ß–∞—Å –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ 14:17 ‚úì")
    else:
        print(f"‚ùå –û—á—ñ–∫—É–≤–∞–≤—Å—è 14:17, –∞–ª–µ –º–∞—î–º–æ {setup_time}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–∫—Ç–∏–≤–∏
    print(f"\nüìä –ê–ö–¢–ò–í–ò ({len(plan['active_assets'])}):")
    for asset in plan['active_assets']:
        symbol = asset['symbol']
        size = asset['position_size_pct']
        leverage = asset['leverage']
        margin = size / leverage
        print(f"   {symbol}: {size:.3f} (–ø–ª–µ—á–µ {leverage}x) ‚Üí –º–∞—Ä–∂–∞ {margin:.3f}")
    
    # –ó–∞–≥–∞–ª—å–Ω–∞ –º–∞—Ä–∂–∞
    total_margin = sum(asset['position_size_pct'] / asset['leverage'] for asset in plan['active_assets'])
    print(f"\nüìã –ó–∞–≥–∞–ª—å–Ω–∞ –º–∞—Ä–∂–∞: {total_margin:.3f} (–ª—ñ–º—ñ—Ç: {plan['global_settings']['margin_limit_pct']})")
    
    if total_margin <= plan['global_settings']['margin_limit_pct']:
        print("‚úÖ –ú–∞—Ä–∂–∞ –≤ –º–µ–∂–∞—Ö –ª—ñ–º—ñ—Ç—É")
    else:
        print("‚ùå –ú–∞—Ä–∂–∞ –ø–µ—Ä–µ–≤–∏—â—É—î –ª—ñ–º—ñ—Ç!")
    
    print(f"\nüéØ –ü–õ–ê–ù 4.0_DEFINITIVE –ì–û–¢–û–í–ò–ô!")
    print(f"üïí –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –æ 14:17")
    print(f"üìà 3 –∞–∫—Ç–∏–≤–∏ –∑ –∑–∞–≥–∞–ª—å–Ω–æ—é –º–∞—Ä–∂–µ—é {total_margin:.1%}")

if __name__ == "__main__":
    test_plan_4_0()
