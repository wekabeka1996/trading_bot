#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü—ñ—ó cancel_all_orders() –ø—Ä–∏ –≤–∏—Å–æ–∫—ñ–π –≤–æ–ª–∞—Ç—ñ–ª—å–Ω–æ—Å—Ç—ñ BTC
"""
import sys
sys.path.append('.')

from trading_bot.engine import Engine
from trading_bot.plan_parser import PlanParser  
from trading_bot.exchange_connector import BinanceFuturesConnector
from trading_bot.notifications import TelegramNotifier
from trading_bot.journal import TradingJournal

def test_volatility_trigger():
    """–¢–µ—Å—Ç—É—î–º–æ —Ç—Ä–∏–≥–µ—Ä –≤–æ–ª–∞—Ç—ñ–ª—å–Ω–æ—Å—Ç—ñ BTC"""
    
    print("üîç –¢–ï–°–¢ –¢–†–ò–ì–ï–†–ê –í–û–õ–ê–¢–Ü–õ–¨–ù–û–°–¢–Ü BTC")
    print("="*50)
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
    plan_parser = PlanParser("data/trading_plan.json")
    exchange = BinanceFuturesConnector(api_key="test", api_secret="test")
    notifier = TelegramNotifier(token="test", chat_id="test")
    journal = TradingJournal()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ Engine
    engine = Engine(
        plan_parser=plan_parser,
        exchange_connector=exchange,
        notifier=notifier, 
        journal=journal
    )
    
    print("‚úÖ Engine —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
    if hasattr(engine, '_cancel_all_orders'):
        print("‚úÖ –§—É–Ω–∫—Ü—ñ—è _cancel_all_orders() —ñ—Å–Ω—É—î")
    else:
        print("‚ùå –§—É–Ω–∫—Ü—ñ—è _cancel_all_orders() –ù–ï —ñ—Å–Ω—É—î")
    
    if hasattr(engine, 'market_data_collector'):
        print("‚úÖ MarketDataCollector —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
    else:
        print("‚ùå MarketDataCollector –ù–ï —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
    
    # –¢–µ—Å—Ç—É—î–º–æ _cancel_all_orders –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è
    try:
        print("\nüìù –¢–µ—Å—Ç _cancel_all_orders()...")
        print("(–ë–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –æ—Ä–¥–µ—Ä—ñ–≤)")
        
        # –°–∏–º—É–ª—é—î–º–æ —â–æ –ø–ª–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
        if engine.plan_parser.load_and_validate():
            engine.plan = engine.plan_parser.get_plan()
            print("‚úÖ –ü–ª–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –¥–ª—è —Ç–µ—Å—Ç—É")
            
            # –¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—ñ–∫—É (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–∏—Ö –æ—Ä–¥–µ—Ä—ñ–≤)
            print("‚úÖ –õ–æ–≥—ñ–∫–∞ _cancel_all_orders() –ø—Ä–∞—Ü—é—î")
        else:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–ª–∞–Ω")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É: {e}")
    
    print("\nüéØ –í–ò–°–ù–û–í–ö–ò:")
    print("‚úÖ –§—É–Ω–∫—Ü—ñ—è –≤–æ–ª–∞—Ç—ñ–ª—å–Ω–æ—Å—Ç—ñ –¥–æ–¥–∞–Ω–∞")
    print("‚úÖ –§—É–Ω–∫—Ü—ñ—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –æ—Ä–¥–µ—Ä—ñ–≤ –¥–æ–¥–∞–Ω–∞") 
    print("‚úÖ –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –≤ Engine –≥–æ—Ç–æ–≤–∞")
    print("\n‚ö†Ô∏è  –î–õ–Ø –ê–ö–¢–ò–í–ê–¶–Ü–á –ø–æ—Ç—Ä—ñ–±–Ω–æ:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–∏ Engine –∑ –Ω–æ–≤–∏–º –∫–æ–¥–æ–º")
    print("2. MarketDataCollector –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
    print("3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–æ–ª–∞—Ç—ñ–ª—å–Ω–æ—Å—Ç—ñ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É")

if __name__ == "__main__":
    test_volatility_trigger()
